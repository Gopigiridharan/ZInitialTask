//SleepIn
public boolean sleepIn(boolean weekday, boolean vacation) {
  if(weekday == false || vacation == true){
    return true;
  }
  return false;
}
//diff21
public int diff21(int n) {
  if (n <= 21) {
    return 21 - n;
  } else {
    return (n - 21) * 2;
  }
}
//nearHundred
public boolean nearHundred(int n) {
  boolean bool = false;

if ( n + 10 >= 100 && n - 10 <= 100){

       bool = true;

       }else if ( n + 10 >= 200 && n - 10 <=200){

       bool = true;
}
return bool;

}
//missingChar
public String missingChar(String str, int n) {
  String ans = "";
  for(int i = 0; i < str.length(); i++){
    if(i!=n){
      ans+=str.charAt(i);
    }
  }
  return ans;
}
//backAround
public String backAround(String str) {
  
  String s = "";
  char last = str.charAt(str.length() - 1);
  s = last+str+last;
  
  return s;
}
//startHi
public boolean startHi(String str) {
  
  if(str.length()<2){
    return false;
  }else{
    String s = str.substring(0,2);
  
  if(s.equals("hi")){
    return true;
  }
  }
  return false;
}
//hasTeen
public boolean hasTeen(int a, int b, int c) {
   return (a>=13 && a<=19) || (b>=13 && b<=19) || (c>=13 && c<=19);
}
//mixStart
public boolean mixStart(String str) {
  
  if(str.length() < 3){
    return false;
  }
  String s = str.substring(1,3);
  return s.equals("ix");
}
//close10
public int close10(int a, int b) {
  int x = Math.abs(a - 10);
  int y = Math.abs(b - 10);
  
  if(x<y){
    return a;
  }
  if(y<x){
    return b;
  }
  return 0;
}
//stringE
public boolean stringE(String str) {
  int count = 0;
  for(int i = 0; i < str.length(); i++){
    if(str.charAt(i) == 'e'){
      count++;
    }
  }
  if(count>=1&&count<=3){
    return true;
  }
  return false;
}
//everyNth
public String everyNth(String str, int n) {
  String result = "";
  
  for (int i=0; i<str.length(); i = i + n) {
    result = result + str.charAt(i);
  }
  return result;
}
//monkeyTrouble
public boolean monkeyTrouble(boolean aSmile, boolean bSmile) {
  return aSmile == bSmile;
}
//parrotTrouble
public boolean parrotTrouble(boolean talking, int hour) {
  return (talking && (hour < 7 || hour > 20));
}
//posNeg
public boolean posNeg(int a, int b, boolean negative) {
  if(negative == true){
    if(a<0 && b<0){
      return true;
    }
  }else{
    if((a>0 && b<0)||(a<0)&&(b>0)){
      return true;
    }
  }
  return false;
}
//frontBack
public String frontBack(String str) {
  if(str.length()<=1){
    return str;
  }
  String s = str.substring(1, str.length()-1);
  
  return str.charAt(str.length()-1)+s+str.charAt(0);
}
//or35
public boolean or35(int n) {
  return (n%3==0||n%5==0);
}
//icyHot
public boolean icyHot(int temp1, int temp2) {
  if(temp1<0&&temp2>100){
    return true;
  }else if(temp2<0&&temp1>100){
    return true;
  }
  return false;
}
//loneTeen
public boolean loneTeen(int a, int b) {
  if((a>=13&&a<=19) && (b<13 || b>19)){
    return true;
  }
  else if((b>=13&&b<=19) && (a<13 || a>19)){
    return true;
  }
  return false;
}
//startOz
public String startOz(String str) {
  String s = "";
  if (str.length() >= 1) {
    if(str.charAt(0)=='o'){
    s += str.charAt(0);
    }
  }
  if (str.length() >= 2) {
    if(str.charAt(1)=='z'){
    s += str.charAt(1);
    }
  }
  return s;
}
//in3050
public boolean in3050(int a, int b) {
  if((a>=30&&a<=40)&&(b>=30&&b<=40)){
    return true;
  }else if((a>=40&&a<=50)&&(b>=40&&b<=50)){
    return true;
  }
  return false;
}
//lastDigit
public boolean lastDigit(int a, int b) {
  return a%10==b%10;
}
//sumDouble
public int sumDouble(int a, int b) {
  int sum = a + b;
  if (a == b) {
    sum = sum * 2;
  }
  
  return sum;
}
//makes10
public boolean makes10(int a, int b) {
  return (a==10||b==10||a+b==10);
}
//notString
public String notString(String str) {
  if (str.length() >= 3 && str.substring(0, 3).equals("not")) {
    return str;
  }
  
  return "not " + str;
}
//front3
public String front3(String str) {
   String front = "";
  
  if (str.length() >= 3) {
    front = str.substring(0, 3);
  }
  else {
    front = str;
  }

  return front + front + front;
}
//front22
public String front22(String str) {
  if(str.length()>=2){
    return str.substring(0,2)+str+str.substring(0,2);
  }
  return str+str+str;
}
//in2020
public boolean in1020(int a, int b) {
  return ((a >= 10 && a <= 20) || (b >= 10 && b <= 20));
}
//delDel
public String delDel(String str) {
   if (str.length()>=4 && str.substring(1, 4).equals("del")) {
    return str.substring(0, 1) + str.substring(4);
  }
  return str;
}
//intMax
public int intMax(int a, int b, int c) {
  
  int max = a;
  
  if(b>max){
    max = b;
  }
  if(c>max){
    max = c;
  }
  return max;
}
//max1020
public int max1020(int a, int b) {
  if (b > a) {
    int temp = a;
    a = b;
    b = temp;
  }
  if (a >= 10 && a <= 20) return a;
  if (b >= 10 && b <= 20) return b;
  return 0;
}
//endUp
public String endUp(String str) {
  if (str.length() <= 3){ 
    return str.toUpperCase();
  }
  int cut = str.length() - 3;
  String front = str.substring(0, cut);
  String back  = str.substring(cut);
  
  return front + back.toUpperCase();
}

